{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","ev","preventDefault","trim","length","data","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MA2BeA,EAzBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAe1C,OACC,0BAAMC,SATc,SAAAC,GACpBA,EAAGC,iBACCJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdd,SAAAP,GACzBF,EAAcE,EAAGQ,OAAOF,Y,uBCNbG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAC3FH,GAFe,sBAIDI,MAAMF,GAJL,cAIbG,EAJa,gBAKIA,EAAIC,OALR,uBAKXZ,EALW,EAKXA,KACFa,EAAOb,EAAKc,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QAVtB,kBAcZK,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IACvC,OACO,yBAAKa,UAAU,0CACX,yBAAKC,IAAKd,EAAKe,IAAI,KACnB,2BAAIN,KCkBDO,EArBC,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECAN,SAAAA,GAAa,IAAD,EACbd,mBAAS,CAClCQ,KAAM,GACNyB,SAAS,IAH6B,mBAChCC,EADgC,KACzBC,EADyB,KAevC,OATAC,qBAAU,WACTvB,EAAQC,GAAUuB,MAAK,SAAAC,GACtBH,EAAS,CACI3B,KAAM8B,EACNL,SAAS,UAKjBC,EDdmBK,CAAazB,GAA/BN,EADyB,EACzBA,KAAMyB,EADmB,EACnBA,QAEd,OACC,oCACC,4BAAKnB,GACJmB,GAAW,0CACZ,yBAAKJ,UAAU,aAEbrB,EAAKD,OAAS,GAAKC,EAAKc,KAAI,SAAAC,GAAG,OAC9B,kBAAC,EAAD,eACCiB,IAAKjB,EAAIC,IACLD,UEXI,SAASkB,IAAgB,IAAD,EACFzC,mBAAS,CAAC,gBADR,mBAC/B0C,EAD+B,KACnB3C,EADmB,KAGtC,OACC,oCACC,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAE5B,4BACE2C,EAAWpB,KAAI,SAAAR,GAAQ,OACvB,kBAAC,EAAD,CAAS0B,IAAK1B,EAAUA,SAAUA,SCTvC6B,IAASC,OACP,kBAACH,EAAD,MACAI,SAASC,eAAe,U","file":"static/js/main.87d0c0d3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setinputValue] = useState(\"\");\r\n\r\n\tconst handleInputChange = ev => {\r\n\t\tsetinputValue(ev.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = ev => {\r\n\t\tev.preventDefault();\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories(data => [inputValue, ...data ]);\r\n\t\t\tsetinputValue(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input type='text' value={inputValue} onChange={handleInputChange} />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=XyvcqoBoxkQ78eQOFXOnSQrOmTxea0OL&q=${encodeURI(\r\n        category\r\n    )}&limit=10`;\r\n    const res = await fetch(url);\r\n    const { data } = await res.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url,\r\n        };\r\n    });\r\n    \r\n    return gifs;\r\n};","import React from \"react\";\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\treturn (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt=\"\" />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"../components/GifGridItem\";\r\nconst GifGrid = ({ category }) => {\r\n\tconst { data, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>{category}</h3>\r\n\t\t\t{loading && <p>Cargando...</p>}\r\n\t\t\t<div className='card-grid'>\r\n\t\t\t\t{\r\n\t\t\t\t\tdata.length > 0 && data.map(img => \r\n\t\t\t\t\t\t<GifGridItem \r\n\t\t\t\t\t\t\tkey={img.id} \r\n\t\t\t\t\t\t\t{...img} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifts\";\r\n\r\nexport const useFetchGifs = category => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then(imgs => {\r\n\t\t\tsetState({\r\n                data: imgs,\r\n                loading: false,\r\n            });\r\n\t\t});\r\n\t});\r\n\r\n\treturn state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nexport default function GifExpertApp() {\r\n\tconst [categories, setCategories] = useState([\"Dragon Ball\"]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<hr />\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\r\n\t\t\t<ol>\r\n\t\t\t\t{categories.map(category => (\r\n\t\t\t\t\t<GifGrid key={category} category={category} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}